# General
scenario_topology_file=netbench_ddos/example/topologies/simple/simple_n2.topology

# We will only have one flow, but we want to wait until it finishes.
#32400 sec = 9 hours
seed=83599
run_time_s=32400
finish_when_first_flows_finish=1

run_folder_name=Online_Range_Fast_Manhattan_10_60_0.3_False_Throughput_0_60_src0_src1_src2_src3_dst0_dst1_dst2_dst3_sport_dport_ttl_len_401_819_Pifo_80_005
run_folder_base_dir=netbench_ddos/temp/ddos-aid/num_clusters

# Transport layer protocol
transport_layer=ddos
transport_layer_input=python/ddos-aid/schedulers/Online_Range_Fast_Manhattan_10_60_0.3_False_Throughput_0_60_src0_src1_src2_src3_dst0_dst1_dst2_dst3_sport_dport_ttl_len_401_819_output.pcap
transport_layer_num_priorities=10
transport_layer_ground_truth_pifo=false

# Switch type
network_device=forwarder_switch
network_device_intermediary=identity
network_device_routing=single_forward

# Output port
## Conversion bytes to packets through MSS, 225000/1500 = 150
output_port=pifo
output_port_max_size_packets=80

# Link
# 20 nanoseconds delay, 10 Gbit/s = 10 bits/ns line rate
link=perfect_simple
link_delay_ns=20
link_bandwidth_bit_per_ns=0.05

# Traffic is hardcoded
enable_input_throughput_tracking=false
enable_output_throughput_tracking=false
enable_packet_drops_tracking=false